#!/bin/bash

#to make it more robust and stop execution if there are errors, pipe failures, or use of undefined variables
set -o errexit
set -o pipefail
set -o nounset

export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

postgres_ready() {
python << END
import sys
import psycopg2
try:
   psycopg2.connect(
      dbname="${POSTGRES_DB}",
      user="${POSTGRES_USER}",
      password="${POSTGRES_PASSWORD}",
      host="${POSTGRES_HOST}",
      port="${POSTGRES_PORT}",
   )
except psycopg2.OperationalError:
   sys.exit(-1)
sys.exit(0)
END
}
until postgres_ready; do
>&2 echo "Waiting for PostgreSQL to become available.....:-("
sleep 1
done
>&2 echo "PostgreSQL is ready!!!!.....:-)"

#"$@": This is a special shell variable that expands to all the command line arguments passed to the script. The double quotes ensure that each argument is treated as a separate word, even if they contain spaces or special characters
exec "$@"